# The manifest for the "trazabilidad" service.
# Read the full specification for the "Request-Driven Web Service" type at:
# https://aws.github.io/copilot-cli/docs/manifest/rd-web-service/

# Your service name will be used in naming your resources like log groups, App Runner services, etc.
name: trazabilidad
# The "architecture" of the service you're running.
type: Request-Driven Web Service

image:
  # Docker build arguments.
  # For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/rd-web-service/#image-build
  build: Dockerfile
  # Port exposed through your container to route traffic to it.
  port: 80

# http:
#   healthcheck:
#     path: /
#     healthy_threshold: 3
#     unhealthy_threshold: 5
#     interval: 20s
#     timeout: 5s

# Number of CPU units for the task.
cpu: 1024
# Amount of memory in MiB used by the task.
memory: 2048

# Connect your App Runner service to your environment's VPC.
network:
  vpc:
    placement: private


# Enable tracing for the service.
# observability:
#   tracing: awsxray

# Optional fields for more advanced use-cases.
#
variables:                    # Pass environment variables as key value pairs.
  CARDANO_NET: preview
  # ENV: prod
  OGMIOS_URL: http://ogmios.test.api.local:1337
  REDIS_URL: redis://redisbackend.test.api.local:6379
  COPILOT_QUEUE_URI: !GetAtt EventsQueue.Arn


environments:
 internal:
  #  count: 2               # Number of tasks to run for the "test" environment.
  #  deployment:            # The deployment strategy for the "test" environment.
  #     rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.

    variables:
      # COPILOT_SERVICE_NAME: redisbackend
      # COPILOT_ENVIRONMENT_NAME: internal
      REDIS_URL: redis://redisbackend.internal.api.local:6379
      OGMIOS_URL: http://ogmios.internal.api.local:1337